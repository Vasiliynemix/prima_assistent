class Lexicon:
    COMMANDS = {
        "/start": "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞",
    }

    LEXICON = {
        "kb_name": {
            "settings_menu": "üè†–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫",
            "back": "‚¨ÖÔ∏è–ù–∞–∑–∞–¥",
            "subscribe": "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è",
            "check_subscription": "‚úÖ–ì–æ—Ç–æ–≤–æ",
            "boost_check": "–ü—Ä–∏–º–∞ {} —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ",
            "boost_settings": "‚öôÔ∏è–ü–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏",
            "boost_settings_one": "–ü—Ä–∏–º–∞ {} –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å",
            "register": "‚úÖ–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è? –ü—Ä–æ–¥–æ–ª–∂–∏–º?",
            "continue": "‚úÖ–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å",
            "personal": "üë•–ü–µ—Ä—Å–æ–Ω–∞–ª –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å",
            "boost": "üöÄ–ë—É—Å—Ç {} –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å",
            "company": "üè¢–ö–æ–º–ø–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å",
        },
        "description": (
            "–ü—Ä–∏–º–∞ –ë—É—Å—Ç - —Å—á–∞—Å—Ç—å–µ –ø–æ—Å—É—Ç–æ—á–Ω–∏–∫–∞ –ø–æ–º–æ–∂–µ—Ç –∑–∞–º–µ—Ç–Ω–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –≤ —Ä–∞–±–æ—Ç–µ,"
            " —Å–¥–µ–ª–∞—Ç—å —Ç–≤–æ–π –±–∏–∑–Ω–µ—Å –ø—Ä–∏–±—ã–ª—å–Ω–µ–π, –∞ —Ç–µ–±—è —Å—á–∞—Å—Ç–ª–∏–≤–µ–π –∂–º–∏ –°–¢–ê–†–¢‚Ä¶."
        ),
        "send": {
            "start_subscription": (
                "–Ø –ü—Ä–∏–º–∞ –ê—Å—Å–∏—Å—Ç.\n"
                "–ü–æ–º–æ–≥—É –í–∞–º –ø–æ–¥—Ä–æ–±–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ü—Ä–∏–º–∞ –ë—É—Å—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –≤  —Ä–∞–±–æ—Ç–µ –ø–æ—Å—É—Ç–æ—á–Ω–∏–∫—É.\n\n"
                "–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª."
            ),
            "subscription_fail": "–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª.",
            "boost_main_menu": "–£–∑–Ω–∞–π –ø–æ–¥—Ä–æ–±–Ω–æ –æ –¥–µ–π—Å—Ç–≤–∏–∏ –±—É—Å—Ç–æ–≤",
            "boost_info_one": "–ë—É—Å—Ç {boost_name}\n<a href=\"{video_link}\">–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ</a>",
            "boost_settings": "–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É—Å—Ç–æ–≤",
            "register": "–°–ø–µ—Ä–≤–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ –ü—Ä–∏–º–∞ –ë—É—Å—Ç.\n\n{link}",
            "end_instruction": "–ù–∞—Å—Ç—Ä–æ–∏–ª? –ü—Ä–æ–¥–æ–ª–∂–∏–º?",
            "company": "–û—Ç–ª–∏—á–Ω–æ.\n–î–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º –∫–æ–º–ø–∞–Ω–∏—é, —Å–µ–π—á–∞—Å –ø—Ä–∏—à–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.",
            "personal": "–î–∞–≤–∞–π –Ω–∞—Å—Ç—Ä–æ–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª.",
            "boost": "–ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É—Å—Ç–∞.\n–°–µ–π—á–∞—Å –ø—Ä–∏—à–ª—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è {}.",
            "end_boost": "–û—Ç–ª–∏—á–Ω–æ! –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—É—Å—Ç–∞ {} –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥—Ä—É–≥–∏—Ö –±—É—Å—Ç–æ–≤ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            "is_end_boost": (
                "‚úÖ–í–∏–∂—É, —á—Ç–æ –≤—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –æ–¥–Ω–æ–≥–æ –∏–∑ –±—É—Å—Ç–æ–≤‚úÖ\n\n"
                "–≠—Ç–∞–ø –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –¥–ª—è –≤—Å–µ—Ö –±—É—Å—Ç–æ–≤ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–π.\n"
                "–ï—Å–ª–∏ –≤—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –Ω–∞ —Å–∞–π—Ç–µ –ü—Ä–∏–º–∞ –ë—É—Å—Ç, —Ç–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –µ–≥–æ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µüëá\n"
                "{link}\n\n"
                "–ú–µ–Ω—é –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ {boost_name}."
            )
        },
        "errors": {
            "video_not_found": "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–æ–∫–∞ –Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –±—É—Å—Ç–∞ {}.\n–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –¥–æ–±–∞–≤–∏–º.",
            "instruction_not_ready": "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø–æ–∫–∞ –Ω–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏  –¥–ª—è {}.\n–í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –¥–æ–±–∞–≤–∏–º.",
        },
    }

    def __init__(self) -> None:
        self._lexicon = self.LEXICON
        self.description: str = self._lexicon["description"]

        self.cmd: LexiconCmdMsg = LexiconCmdMsg(self.COMMANDS)
        self.send: LexiconMsgSend = LexiconMsgSend(self._lexicon)
        self.kb_name: LexiconMsgKbName = LexiconMsgKbName(self._lexicon)
        self.back_to: LexiconBackToMsg = LexiconBackToMsg(self._lexicon)
        self.errors: LexiconErrorsMsg = LexiconErrorsMsg(self._lexicon)


class LexiconBackToMsg:
    def __init__(self, lexicon: dict) -> None:
        pass


class LexiconErrorsMsg:
    def __init__(self, lexicon: dict) -> None:
        self._lexicon = lexicon["errors"]

        self.video_not_found = self._lexicon["video_not_found"]
        self.instruction_not_ready = self._lexicon["instruction_not_ready"]


class LexiconCmdMsg:
    def __init__(self, commands: dict) -> None:
        self._commands = commands
        self.start = "/start"


class LexiconMsgSend:
    def __init__(self, lexicon: dict) -> None:
        self._lexicon = lexicon["send"]
        self.start_subscription = self._lexicon["start_subscription"]
        self.subscription_fail = self._lexicon["subscription_fail"]

        self.boost_main_menu = self._lexicon["boost_main_menu"]
        self.boost_info_one = self._lexicon["boost_info_one"]

        self.boost_settings = self._lexicon["boost_settings"]

        self.register = self._lexicon["register"]
        self.company = self._lexicon["company"]
        self.personal = self._lexicon["personal"]
        self.boost = self._lexicon["boost"]
        self.end_boost = self._lexicon["end_boost"]

        self.is_end_boost = self._lexicon["is_end_boost"]


class LexiconMsgKbName:
    def __init__(self, lexicon: dict) -> None:
        self._lexicon = lexicon["kb_name"]

        self.settings_menu = self._lexicon["settings_menu"]

        self.back = self._lexicon["back"]
        self.continue_btn = self._lexicon["continue"]

        self.subscribe = self._lexicon["subscribe"]
        self.check_subscription = self._lexicon["check_subscription"]

        self.boost_check = self._lexicon["boost_check"]
        self.boost_settings = self._lexicon["boost_settings"]

        self.boost_settings_one = self._lexicon["boost_settings_one"]

        self.register = self._lexicon["register"]

        self.personal = self._lexicon["personal"]
        self.boost = self._lexicon["boost"]
        self.company = self._lexicon["company"]
